name: "CI-2"
on:
  push:
    branches:
      - master
      - develop
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: "ubuntu-latest"
    steps:
    - name: Setup Go environment
      uses: actions/setup-go@v3
      with:
        go-version: "1.23.x"

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@v0.5.1
    - name: Install goimports
      run: go install golang.org/x/tools/cmd/goimports@latest

    # Checks-out the repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3

    # Run linters
    - name: Run go vet
      run: go vet ./...
    - name: Run goimports
      run: test -z $(find . -name '*.go' -type f | xargs goimports -e -d | tee /dev/stderr)
    - name: Run staticcheck
      run: staticcheck ./...

  test:
    name: "Test"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # use max/min supported Go versions
        go-version: ["1.23.x"]

    steps:
    - name: Setup Go environment
      id: setup-go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    # Checks-out the repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3

    # Run tests
    - run: go test -v -cover -race ./...
  


  build:
    name: "Build Calculator (${{ matrix.target.os }}, ${{ matrix.go-version }})"
    runs-on: ${{ matrix.target.host || 'ubuntu-latest' }}
    env:
      GO111MODULE: on
    strategy:
      fail-fast: false
      matrix:
        # use max/min supported Go versions
        go-version: ["1.23.x"]
        target:
          - os: android
            args: -app-id calc.sha${{ github.sha }}

          
          ## Currently not easily supported from GitHub actions.
          ## https://github.com/fyne-io/fyne-cross/pull/104#issuecomment-1099494308
          # - os: ios
          #   args: -app-id calc.sha${{ github.sha }}
          #   host: macos-latest

    steps:
      - name: Setup Go environment
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: fyne-cross

      - name: Checkout fyne-io/calculator
        uses: actions/checkout@v3
        with:
          repository: fyne-io/calculator
          path: calculator

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/fyne-cross
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/go.sum') }}

      - name: Install Fyne-cross
        working-directory: fyne-cross
        run: go install

      - name: Install Fyne
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Install Docker
        if: ${{ runner.os == 'macos' }}
        uses: douglascamata/setup-docker-macos-action@v1-alpha
    
      - name: Build
        working-directory: calculator
        run: |
          fyne-cross \
            ${{ matrix.target.os }} \
            ${{ matrix.target.args }} \
            -debug -no-cache \
            -name calculator${{ matrix.target.ext }}
            
      - name: 必要时进行压缩

        run: |
          cp /home/runner/work/fyne-cross/fyne-cross/calculator/fyne-cross/dist/android/calculator.apk /home/runner/work/fyne-cross/fyne-cross
          tar -czf calculator.apk *.apk

      - name: 检查文件大小
        id: check_size
        run: |
          file="calculator"
          file_size=$(stat -c%s "$file")
          max_size=$((2 * 1024 * 1024 * 1024))

          if [ "$file_size" -gt "$max_size" ]; then
            echo "EXCEEDS_LIMIT=true" >> $GITHUB_ENV
          else
            echo "EXCEEDS_LIMIT=false" >> $GITHUB_ENV
          fi

      - name: 获取发布名称和标签
        run: |
          if [ ${{ steps.determine_logic.outputs.num_images }} -gt 1 ]; then
            if [ -z "${{ github.event.inputs.custom_name }}" ]; then
              release_name="calculator"
            else
              release_name="${{ github.event.inputs.custom_name }}.tar.gz"
            fi
          else
          release_name="calculator"
          fi
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

          if [ -z "${{ github.event.inputs.tag }}" ]; then
            tag_name=$(date +'%Y%m%d')
          else
            tag_name="${{ github.event.inputs.tag }}"
          fi
          echo "RELEASE_TAG=$tag_name" >> $GITHUB_ENV

      - name: 上传至GitHub Release（如果小于2GB）
        if: env.EXCEEDS_LIMIT == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: ${{ env.RELEASE_NAME }}
          body: "Daily Docker Images for ${{ env.RELEASE_TAG }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传为工件（如果超过2GB）
        if: env.EXCEEDS_LIMIT == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: ${{ env.RELEASE_NAME }}

      - name: 清理中间文件（如果小于2GB）
        if: env.EXCEEDS_LIMIT == 'false'
        run: |
          rm *.apk


  build-fyneterm:
    name: "Build Fyneterm (${{ matrix.target.os }}, ${{ matrix.go-version }})"
    runs-on: ${{ matrix.target.host || 'ubuntu-latest' }}
    env:
      GO111MODULE: on
    strategy:
      fail-fast: false
      matrix:
        # use max/min supported Go versions
        go-version: ["1.23.x"]
        target:
          - os: android
            args: -app-id calc.sha${{ github.sha }}
          
          ## Currently not easily supported from GitHub actions.
          ## https://github.com/fyne-io/fyne-cross/pull/104#issuecomment-1099494308
          # - os: ios
          #   args: -app-id calc.sha${{ github.sha }}
          #   host: macos-latest

    steps:
      - name: Setup Go environment
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: fyne-cross

      - name: Checkout fyne-io/terminal
        uses: actions/checkout@v3
        with:
          repository: fyne-io/terminal
          path: terminal

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/fyne-cross
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/go.sum') }}

      - name: Install Fyne-cross
        working-directory: fyne-cross
        run: go install

      - name: Install Fyne
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest

      - name: Install Docker
        if: ${{ runner.os == 'macos' }}
        uses: douglascamata/setup-docker-macos-action@v1-alpha
 
      - name: Build
        working-directory: terminal
        run: |
          fyne-cross \
            ${{ matrix.target.os }} \
            ${{ matrix.target.args }} \
            -debug \
            -name fyneterm${{ matrix.target.ext }} cmd/fyneterm

      - name: 必要时进行压缩

        run: |
          cp /home/runner/work/fyne-cross/fyne-cross/terminal/fyne-cross/dist/android/fyneterm.apk /home/runner/work/fyne-cross/fyne-cross
          tar -czf fyneterm *.apk

      - name: 检查文件大小
        id: check_size
        run: |
          file="fyneterm"
          file_size=$(stat -c%s "$file")
          max_size=$((2 * 1024 * 1024 * 1024))

          if [ "$file_size" -gt "$max_size" ]; then
            echo "EXCEEDS_LIMIT=true" >> $GITHUB_ENV
          else
            echo "EXCEEDS_LIMIT=false" >> $GITHUB_ENV
          fi

      - name: 获取发布名称和标签
        run: |
          if [ ${{ steps.determine_logic.outputs.num_images }} -gt 1 ]; then
            if [ -z "${{ github.event.inputs.custom_name }}" ]; then
              release_name="fyneterm"
            else
              release_name="${{ github.event.inputs.custom_name }}.tar.gz"
            fi
          else
          release_name="fyneterm"
          fi
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

          if [ -z "${{ github.event.inputs.tag }}" ]; then
            tag_name=$(date +'%Y%m%d')
          else
            tag_name="${{ github.event.inputs.tag }}"
          fi
          echo "RELEASE_TAG=$tag_name" >> $GITHUB_ENV

      - name: 上传至GitHub Release（如果小于2GB）
        if: env.EXCEEDS_LIMIT == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: ${{ env.RELEASE_NAME }}
          body: "Daily Docker Images for ${{ env.RELEASE_TAG }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 上传为工件（如果超过2GB）
        if: env.EXCEEDS_LIMIT == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: ${{ env.RELEASE_NAME }}

      - name: 清理中间文件（如果小于2GB）
        if: env.EXCEEDS_LIMIT == 'false'
        run: |
          rm *.apk

